# upstream block(nằm sẵn trong http {})
upstream backend_app {
  least_conn;
    # max_fails=N =>Nếu server không phản hồi hoặc trả về lỗi N lần, Nginx sẽ đánh dấu server đó là "Down".
    # fail_timeout=20s => Server bị đánh dấu "down" trong 20 giây, trong thời gian này Nginx sẽ không gửi request tới server đó.
    server server_1:8081 max_fails=1 fail_timeout=5s;
    server server_2:8082 max_fails=1 fail_timeout=5s;
    # ip_hash;
      # uncomment để thử ip_hash
}

server {
  listen 80;
  server_name localhost;

  # dinh nghia nhung router ma co kha nang cham
  location /cpu {
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_next_upstream error timeout;
      proxy_connect_timeout 3s;
      proxy_read_timeout 30s; # Đủ cho /cpu (15 giây)
  }
  location /slow {
        proxy_pass http://backend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_next_upstream error timeout;
        proxy_connect_timeout 3s;
        proxy_read_timeout 30s; # Đủ cho /slow (15 giây)
    }




  # dinh nghia nhung router ma co kha nang phan hoi nhanh
  location / {
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;

      # + neu ghi nhu nay: proxy_next_upstream error timeout http_502 http_504; => co nghia la: đang mở rộng điều kiện fallback
      #   - Ngoài “error” và “timeout”
      #   - Còn khi backend trả về mã HTTP 502 hoặc 504 thì Nginx cũng thử server tiếp theo.
      proxy_next_upstream error timeout;

      # Nếu không thể kết nối tới mot server trong 2 giây, coi là thất bại.
      proxy_connect_timeout 2s;

      # Nếu mot server không trả về dữ liệu trong 2 giây, coi là thất bại. => Nhanh chóng phát hiện server bị treo
      proxy_read_timeout 2s;
  }
}